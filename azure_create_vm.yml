---
- name: Azure Create VM
  hosts: localhos't
  connection: local
  vars_files:
    - "azure_vars.yml"
  
  vars:
    # script to run inside the VM when windows VM has been provisioned (aka cloud-init) 
    winrm_enable_script: "Invoke-Expression -Command ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1')); Enable-WSManCredSSP -Role Server -Force"
    azure_vm_name: "{{ vm_name }}{{ tower_user_name[-2:] }}"
    ports
      webserver: "80,443"
      dbserver: "3306"

  tasks:
#  - name: Define arguments for provisioning a Linux VM
#    set_fact:
#      arm_offer: "RHEL"
#      arm_publisher: "RedHat"
#      arm_sku: "7-RAW"
#      arm_ports: "22"
#    when: os_type=="Linux"

#  - name: Define arguments for provisioning a Windows VM
#    set_fact:
#      arm_offer: "WindowsServer"
#      arm_publisher: "MicrosoftWindowsServer"
#      arm_sku: "2016-Datacenter"
#      arm_ports: "3389,5986"
#    when: os_type=="Windows"
  - name: include OS type specific vars
    include_vars: "azure_vm_{{ os_type | lower }}_vars.yml"
    
  - name: set fact
    set_fact:
      add_ports: "{{ ports[ {{ role }}] }}"
      
  - name: Show ports
    debug:
      msg: "Ports: {{ add_ports }}"

  - name: Define additional ports for server role
    set_fact:
      arm_ports: "{{ arm_ports }},{{ {{ role }}_ports }}"
    when: role=="webserver"
      
  - name: Define additional ports for db server role
    set_fact:
      arm_ports: "{{ arm_ports }},3306"
    when: role=="dbserver"
 
  - name: provision new Azure virtual host
    azure_rm_virtualmachine:
      admin_username: '{{ admin_username }}'
      admin_password: '{{ admin_password }}'
      os_type: '{{ os_type }}'
      image:
        offer: '{{ arm_offer }}'
        publisher: '{{ arm_publisher }}'
        sku: '{{ arm_sku }}'
        version: 'latest'
      name: '{{ azure_vm_name }}'
      resource_group: 'AnsibleWorkshop'
      state: present
      vm_size: Standard_DS1_v2
      open_ports: '{{ arm_ports }}'
      virtual_network_name: 'AnsibleWorkshopVirtNet'
      subnet_name: 'AnsibleWorkshopSubNet'
      tags:
          role: '{{ role }}'
          user: '{{ tower_user_name }}'

  - name: create Azure vm extension to enable HTTPS WinRM listener
    azure_rm_virtualmachine_extension:
      name: winrm-extension
      resource_group: 'AnsibleWorkshop'
      virtual_machine_name: '{{ azure_vm_name }}'
      publisher: Microsoft.Compute
      virtual_machine_extension_type: CustomScriptExtension
      type_handler_version: 1.9
      settings: '{"commandToExecute": "powershell.exe -ExecutionPolicy ByPass {{winrm_enable_script}}"}'
      auto_upgrade_minor_version: true
    when: os_type == "Windows"

  - name: wait for the WinRM port to come online
    wait_for:
      port: 5986
      host: '{{azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress}}'
      timeout: 600
    when: os_type == "Windows"

  - name: Get Public IP
    azure_rm_publicipaddress_facts:
      resource_group: 'AnsibleWorkshop'
      name: '{{ azure_vm_name }}01'
    register: azure_ip

  - debug:
      msg: "Public IP: {{ azure_ip.ansible_facts.azure_publicipaddresses[0].properties.ipAddress }}"
